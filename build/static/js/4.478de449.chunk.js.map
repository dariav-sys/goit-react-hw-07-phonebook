{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","views/Contacts/Contacts.module.css","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/Filter/Filter.js","views/Contacts/Contacts.js"],"names":["module","exports","axios","defaults","baseURL","getLoading","state","contacts","loading","getFiltered","filter","getAllContactsItems","items","getErrorMessage","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","ContactForm","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","onSubmit","className","styles","form","this","input","placeholder","type","onChange","button","Component","mapDispatchToProps","contact","dispatch","a","addContactRequest","post","response","addContactSuccess","data","addContactError","message","connect","onDelete","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","filtered","map","onClick","changeFilter","Contacts","fetchContacts","isLoadingContacts","isContactIncludes","container","loader","contactsCont","contactsList","length","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,OAAS,4BAA4B,KAAO,4B,oBCAjGD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,8B,oBCAlED,EAAOC,QAAU,CAAC,MAAQ,wB,oBCA1BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,OAAS,2B,qLCYrGC,IAAMC,SAASC,QAAU,4CAEzB,I,QCbMC,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SACrCC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QACtCC,EAAsB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAC9CC,EAAkB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,OAE1CC,EAAqBC,YACzB,CAACL,EAAqBF,IACtB,SAACF,EAAUG,GACT,IAAMO,EAAmBP,EAAOQ,cAEhC,OAAOX,EAASG,QAAO,SAAAS,GAAI,OACzBA,EAAKC,KAAKF,cAAcG,SAASJ,S,OCPjCK,E,4MACJhB,MAAQ,CACNc,KAAM,GACNG,OAAQ,I,EAGVC,eAAiB,SAAAC,GAAM,IAAD,EACIA,EAAEC,OAAlBN,EADY,EACZA,KAAMO,EADM,EACNA,MACd,EAAKC,SAAL,eACGR,EAAOO,K,EAIZE,eAAiB,SAAAJ,GACfA,EAAEK,iBADkB,MAEK,EAAKxB,MAAtBc,EAFY,EAEZA,KAAMG,EAFM,EAENA,OACTH,GAASG,IACd,EAAKQ,MAAMC,SAAS,CAClBZ,OACAG,WAGF,EAAKK,SAAS,CACZR,KAAM,GACNG,OAAQ,O,4CAIZ,WACE,OACE,uBAAMU,UAAWC,IAAOC,KAAMH,SAAUI,KAAKP,eAA7C,UACE,gCACE,uBACEI,UAAWC,IAAOG,MAClBC,YAAY,QACZC,KAAK,OACLnB,KAAK,OACLO,MAAOS,KAAK9B,MAAMc,KAClBoB,SAAUJ,KAAKZ,mBAGnB,gCACE,uBACES,UAAWC,IAAOG,MAClBC,YAAY,UACZC,KAAK,OACLnB,KAAK,SACLO,MAAOS,KAAK9B,MAAMiB,OAClBiB,SAAUJ,KAAKZ,mBAGnB,wBAAQS,UAAWC,IAAOO,OAAQF,KAAK,SAAvC,wB,GAnDkBG,aA2DpBC,EAAqB,CACzBX,SFxCiB,SAAAY,GAAO,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC5BD,EAASE,eADmB,kBAIH7C,IAAM8C,KAAK,YAAaJ,GAJrB,OAIpBK,EAJoB,OAK1BJ,EAASK,YAAkBD,EAASE,OALV,gDAO1BN,EAASO,YAAgB,KAAMC,UAPL,yDAAJ,wDE+CXC,eAJS,SAAAhD,GAAK,MAAK,CAChCC,SAAUI,EAAoBL,MAGQqC,EAAzBW,CAA6ChC,G,kBCpDtDqB,EAAqB,CACzBY,SHeoB,SAAAC,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,sDAC1BD,EAASY,eAET,IACEvD,IAAMwD,OAAN,oBAA0BF,IAC1BX,EAASc,YAAqBH,IAC9B,MAAO1C,GACP+B,EAASe,YAAmB9C,EAAMuC,UAPV,2CAAJ,wDGZTC,cAAQ,KAAMX,EAAdW,EAnBK,SAAC,GAA4B,IAA1BO,EAAyB,EAAzBA,SAAUN,EAAe,EAAfA,SAC/B,OAAOM,EAASC,KAAI,YAA2B,IAAxB1C,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQiC,EAAS,EAATA,GACnC,OACE,qBAAIvB,UAAWC,IAAOU,QAASxB,KAAMA,EAArC,UACE,qBAAKa,UAAWC,IAAOO,OAAvB,SACE,wBAAQF,KAAK,SAASwB,QAAS,kBAAMR,EAASC,IAA9C,iBAIDpC,EANH,MAMYG,IANoCiC,S,kBCsBvCF,eARS,SAAAhD,GAAK,MAAK,CAChCqB,MAAOlB,EAAYH,OAGM,SAAAuC,GAAQ,MAAK,CACtCL,SAAU,SAAAf,GAAC,OAAIoB,EAASmB,YAAavC,EAAEC,OAAOC,YAGjC2B,EAzBA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SACvB,OACE,mCACE,gCACE,uBACEP,UAAWC,IAAOG,MAClBC,YAAY,aACZC,KAAK,OACLnB,KAAK,SACLO,MAAOA,EACPa,SAAUA,W,SCGdyB,E,uKACJ,WACE7B,KAAKL,MAAMmC,kB,oBAGb,WAAU,IAAD,EACiD9B,KAAKL,MAArDoC,EADD,EACCA,kBAAmBC,EADpB,EACoBA,kBAAmBtD,EADvC,EACuCA,MAC9C,OACE,sBAAKmB,UAAWoC,YAAhB,UACE,cAAC,EAAD,IACCvD,GAAS,mBAAGmB,UAAU,gBAAb,SAA8BnB,IACvCqD,GACC,8BACE,cAAC,IAAD,CAAQlC,UAAWqC,aAGtBF,GACC,sBAAKnC,UAAWsC,eAAhB,UACE,cAAC,EAAD,IACA,oBAAItC,UAAWuC,eAAf,SACE,cAAC,EAAD,CAAcX,SAAUzB,KAAKL,MAAMxB,uB,GApB1BmC,aAwCRY,uBAXS,SAAAhD,GAAK,MAAK,CAChCC,SAAUQ,EAAmBT,GAC7B8D,kBAAmB9D,EAAMC,SAASK,MAAM6D,OAAS,EACjDN,kBAAmB9D,EAAWC,GAC9BQ,MAAOD,EAAgBP,OAGE,SAAAuC,GAAQ,MAAK,CACtCqB,cAAe,kBAAMrB,ELzCD,uCAAM,WAAMA,GAAN,mBAAAC,EAAA,6DAC1BD,EAAS6B,eADiB,kBAIDxE,IAAMyE,IAAI,aAJT,gBAIhBxB,EAJgB,EAIhBA,KACRN,EAAS+B,YAAqBzB,IALN,gDAMfE,EANe,KAMfA,QACTR,EAASgC,YAAmBxB,IAPJ,yDAAN,2DK4CPC,CAA6CW","file":"static/js/4.478de449.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__3ZUAd\",\"button\":\"ContactItem_button__1siMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1V4Nm\",\"header\":\"Contacts_header__3TcUp\",\"loader\":\"Contacts_loader__20XU9\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch ({ message }) {\n    dispatch(fetchContactsError(message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFiltered = state => state.contacts.filter;\nconst getAllContactsItems = state => state.contacts.items;\nconst getErrorMessage = state => state.contacts.error;\n\nconst getVisibleContacts = createSelector(\n  [getAllContactsItems, getFiltered],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport {\n  getLoading,\n  getFiltered,\n  getAllContactsItems,\n  getErrorMessage,\n  getVisibleContacts,\n};\n","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nimport { connect } from 'react-redux';\nimport { getAllContactsItems, addContact } from '../../redux/phonebook';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onHandleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) return;\n    this.props.onSubmit({\n      name,\n      number,\n    });\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.onHandleSubmit}>\n        <label>\n          <input\n            className={styles.input}\n            placeholder=\"Name:\"\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onHandleChange}\n          ></input>\n        </label>\n        <label>\n          <input\n            className={styles.input}\n            placeholder=\"Number:\"\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.onHandleChange}\n          ></input>\n        </label>\n        <button className={styles.button} type=\"submit\">\n          ADD\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onSubmit: addContact,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getAllContactsItems(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './ContactItem.module.css';\nimport { connect } from 'react-redux';\n\nimport { deleteContact } from '../../redux/phonebook';\n\nconst ContactItem = ({ filtered, onDelete }) => {\n  return filtered.map(({ name, number, id }) => {\n    return (\n      <li className={styles.contact} name={name} key={id}>\n        <div className={styles.button}>\n          <button type=\"button\" onClick={() => onDelete(id)}>\n            X\n          </button>\n        </div>\n        {name} : {number}\n      </li>\n    );\n  });\n};\n\nconst mapDispatchToProps = {\n  onDelete: deleteContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFiltered } from '../../redux/phonebook';\nimport { changeFilter } from '../../redux/phonebook/contacts-actions';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        <input\n          className={styles.input}\n          placeholder=\"Filter by:\"\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: getFiltered(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactsItem from '../../components/ContactItem/ContactItem';\nimport Filter from '../../components/Filter/Filter';\nimport { connect } from 'react-redux';\nimport {\n  getLoading,\n  getErrorMessage,\n  getVisibleContacts,\n  fetchContacts,\n} from '../../redux/phonebook';\nimport {\n  container,\n  contactsCont,\n  contactsList,\n  loader,\n} from './Contacts.module.css';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { isLoadingContacts, isContactIncludes, error } = this.props;\n    return (\n      <div className={container}>\n        <ContactForm />\n        {error && <p className=\"error-message\">{error}</p>}\n        {isLoadingContacts && (\n          <div>\n            <Loader className={loader} />\n          </div>\n        )}\n        {isContactIncludes && (\n          <div className={contactsCont}>\n            <Filter />\n            <ul className={contactsList}>\n              <ContactsItem filtered={this.props.contacts} />\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n  isContactIncludes: state.contacts.items.length > 0,\n  isLoadingContacts: getLoading(state),\n  error: getErrorMessage(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}