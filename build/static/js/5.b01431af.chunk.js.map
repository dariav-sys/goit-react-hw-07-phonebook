{"version":3,"sources":["views/Login/Login.module.css","views/Login/Login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["module","exports","initialState","email","password","LoginView","useState","user","setUser","dispatch","useDispatch","handleChange","target","name","value","prevState","onSubmit","e","preventDefault","logIn","className","form","label","type","onChange","input","placeholder","button","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,iJCI1GC,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGG,SAASC,IAAa,IAAD,EACVC,mBAASJ,GADC,mBAC3BK,EAD2B,KACrBC,EADqB,KAE5BC,EAAWC,cAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCN,GAAQ,SAAAO,GAAS,kCAAUA,GAAV,kBAAsBF,EAAOC,QAShD,OACE,8BACE,uBAAME,SARW,SAAAC,GACnBA,EAAEC,iBACFT,EAASU,YAAMZ,IACfC,EAAQN,IAKwBkB,UAAWC,OAAzC,UACE,wBAAOD,UAAWE,QAAlB,kBAEE,uBACEC,KAAK,QACLV,KAAK,QACLC,MAAOP,EAAKJ,MACZqB,SAAUb,EACVS,UAAWK,QACXC,YAAY,sBAIhB,wBAAON,UAAWE,QAAlB,qBAEE,uBACEC,KAAK,WACLV,KAAK,WACLC,MAAOP,EAAKH,SACZoB,SAAUb,EACVS,UAAWK,QACXC,YAAY,iBAIhB,wBAAQH,KAAK,SAASH,UAAWO,SAAjC,4B,8EC/CO,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAG3B,QAETgB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/5.b01431af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__RnYgG\",\"label\":\"Login_label__26tIG\",\"input\":\"Login_input__3dIvy\",\"button\":\"Login_button__ADmdZ\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth';\nimport { form, label, button, input } from './Login.module.css';\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nexport default function LoginView() {\n  const [user, setUser] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn(user));\n    setUser(initialState);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={form}>\n        <label className={label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={user.email}\n            onChange={handleChange}\n            className={input}\n            placeholder=\"name@email.com\"\n          />\n        </label>\n\n        <label className={label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            onChange={handleChange}\n            className={input}\n            placeholder=\"*********\"\n          />\n        </label>\n\n        <button type=\"submit\" className={button}>\n          Sign in\n        </button>\n      </form>\n    </div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}