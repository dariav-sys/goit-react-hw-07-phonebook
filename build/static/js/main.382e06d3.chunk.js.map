{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/auth/auth-reducers.js","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","redux/phonebook/contacts-actions.js","components/AuthNav/AuthNav.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phonebook/contacts-reducers.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","user","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","state","isLoggedIn","getUsername","name","createAction","module","exports","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","AuthNav","to","exact","className","navLink","activeClassName","activeNavLink","Component","connect","isAuthenticated","mapDispatchToProps","usermenuCont","userName","type","onClick","button","header","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","Contacts","Register","Login","App","this","onGetCurrentUser","fallback","path","items","filter","contact","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phoneBookReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"wZAgBAA,IAAMC,SAASC,QAAU,2CAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAI5CC,EAAW,SAAAC,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACvBD,EAASE,eADc,kBAGEX,IAAMY,KAAK,gBAAiBJ,GAH9B,OAGfK,EAHe,OAKrBV,EAAUU,EAASC,KAAKX,OAExBM,EAASM,YAAgBF,EAASC,OAPb,gDASrBL,EAASO,YAAc,KAAMC,UATR,yDAAJ,uDAafC,EAAQ,SAAAV,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACpBD,EAASU,eADW,kBAGKnB,IAAMY,KAAK,eAAgBJ,GAHhC,OAGZK,EAHY,OAKlBV,EAAUU,EAASC,KAAKX,OAExBM,EAASW,YAAaP,EAASC,OAPb,gDASlBL,EAASY,YAAW,KAAMJ,UATR,yDAAJ,uDAaZK,EAAS,yDAAM,WAAMb,GAAN,SAAAC,EAAA,6DACnBD,EAASc,eADU,kBAGXvB,IAAMY,KAAK,iBAHA,OAIjBT,IACAM,EAASe,eALQ,gDAOjBf,EAASgB,YAAY,KAAMR,UAPV,yDAAN,uDAWTS,EAAiB,yDAAM,WAAOjB,EAAUkB,GAAjB,mBAAAjB,EAAA,2DAGvBiB,IADaC,EAFU,EAEzBC,KAAQ1B,MAFiB,wDAQ3BA,EAAUyB,GAEVnB,EAASqB,eAVkB,kBAYF9B,IAAM+B,IAAI,kBAZR,OAYnBlB,EAZmB,OAazBJ,EAASuB,YAAsBnB,EAASC,OAbf,kDAezBL,EAASwB,YAAoB,KAAMhB,UAfV,0DAAN,yDChEjBiB,EAAqB,SAAAC,GAAK,OAAIA,EAAMN,KAAKO,YAEzCC,EAAc,SAAAF,GAAK,OAAIA,EAAMN,KAAKrB,KAAK8B,O,+BCF7C,maAEM3B,EAAkB4B,YAAa,wBAC/BxB,EAAkBwB,YAAa,wBAC/BvB,EAAgBuB,YAAa,sBAE7BpB,EAAeoB,YAAa,qBAC5BnB,EAAemB,YAAa,qBAC5BlB,EAAakB,YAAa,mBAE1BhB,EAAgBgB,YAAa,sBAC7Bf,EAAgBe,YAAa,sBAC7Bd,EAAcc,YAAa,oBAE3BT,EAAwBS,YAAa,8BACrCP,EAAwBO,YAAa,8BACrCN,EAAsBM,YAAa,6B,mBCfzCC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,iC,mBCArED,EAAOC,QAAU,CAAC,QAAU,4BAA4B,cAAgB,oC,wECYlEC,EAAmB,CAAEJ,KAAM,KAAMK,MAAO,MAExCnC,EAAOoC,YAAcF,GAAD,mBACvB3B,KAAkB,SAAC8B,EAAD,YAAMC,QAAsBtC,QADvB,cAEvBY,KAAe,SAACyB,EAAD,YAAMC,QAAsBtC,QAFpB,cAGvBgB,KAAgB,kBAAMkB,KAHC,cAIvBV,KAAwB,SAACa,EAAD,YAAMC,WAJP,IAOpB3C,EAAQyC,YAAc,MAAD,mBACxB7B,KAAkB,SAAC8B,EAAD,YAAMC,QAAsB3C,SADtB,cAExBiB,KAAe,SAACyB,EAAD,YAAMC,QAAsB3C,SAFnB,cAGxBqB,KAAgB,kBAAM,QAHE,IAMrBuB,EAAW,SAACF,EAAD,YAAMC,SAEjBE,EAAQJ,YAAc,MAAD,mBACxB5B,IAAgB+B,GADQ,cAExB1B,IAAa0B,GAFW,cAGxBtB,IAAcsB,GAHU,cAIxBd,IAAsBc,GAJE,IAOrBX,EAAaQ,aAAc,GAAD,mBAC7B7B,KAAkB,kBAAM,KADK,cAE7BK,KAAe,kBAAM,KAFQ,cAG7BY,KAAwB,kBAAM,KAHD,cAI7BhB,KAAgB,kBAAM,KAJO,cAK7BK,KAAa,kBAAM,KALU,cAM7BY,KAAsB,kBAAM,KANC,cAO7BT,KAAgB,kBAAM,KAPO,IAUjByB,gBAAgB,CAC7BzC,OACA4B,aACAjC,QACA6C,W,mBClDFR,EAAOC,QAAU,CAAC,aAAe,+BAA+B,UAAY,4BAA4B,SAAW,2BAA2B,OAAS,2B,mBCAvJD,EAAOC,QAAU,CAAC,OAAS,yB,+BCD3B,+VAEaS,EAAuBX,YAClC,iCAEWY,EAAuBZ,YAClC,iCAEWa,EAAqBb,YAAa,+BAElCc,EAAoBd,YAAa,8BACjCe,EAAoBf,YAAa,8BACjCgB,EAAkBhB,YAAa,4BAE/BiB,EAAuBjB,YAClC,iCAEWkB,EAAuBlB,YAClC,iCAEWmB,EAAqBnB,YAAa,+BAGlCoB,GADgBpB,YAAa,oBACdA,YAAa,4B,qKCM1BqB,E,4JAxBb,WACE,OACE,gCACE,cAAC,IAAD,CACEC,GAAG,YACHC,OAAK,EACLC,UAAWC,UACXC,gBAAiBC,gBAJnB,sBAQA,cAAC,IAAD,CACEL,GAAG,SACHC,OAAK,EACLC,UAAWC,UACXC,gBAAiBC,gBAJnB,2B,GAZcC,a,gBCyBPC,eAJS,SAAAjC,GAAK,MAAK,CAChCkC,gBAAiBnC,YAAmBC,MAGvBiC,EAvBI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACpB,OACE,gCACE,cAAC,IAAD,CAASR,GAAG,IAAIC,OAAK,EAACC,UAAWC,UAASC,gBAAiBC,gBAA3D,kBAGCG,GACC,cAAC,IAAD,CACER,GAAG,YACHC,OAAK,EACLC,UAAWC,UACXC,gBAAiBC,gBAJnB,4B,QCQFI,EAAqB,CACzBhD,YAGa8C,eARS,SAAAjC,GAAK,MAAK,CAChCG,KAAMD,YAAYF,MAOoBmC,EAAzBF,EAnBE,SAAC,GAAsB,IAApB9B,EAAmB,EAAnBA,KAAMhB,EAAa,EAAbA,OACxB,OACE,sBAAKyC,UAAWQ,eAAhB,UACE,uBAAMR,UAAWS,WAAjB,UAA4BlC,EAA5B,kCACA,wBAAQmC,KAAK,SAASC,QAASpD,EAAQyC,UAAWY,SAAlD,2B,QCUSP,eAJS,SAAAjC,GAAK,MAAK,CAChCkC,gBAAiBnC,YAAmBC,MAGvBiC,EAZA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChB,OACE,yBAAQN,UAAWa,SAAnB,UACE,cAAC,EAAD,IACCP,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,uBCWzBD,eAJS,SAAAjC,GAAK,MAAK,CAChCkC,gBAAiBnC,YAAmBC,MAGvBiC,EAlBM,SAAC,GAAD,IACRD,EADQ,EACnBU,UACAR,EAFmB,EAEnBA,gBACAS,EAHmB,EAGnBA,WACGC,EAJgB,mEAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXZ,EAAkB,cAACF,EAAD,eAAec,IAAY,cAAC,IAAD,CAAUpB,GAAIiB,WCalDV,eAJS,SAAAjC,GAAK,MAAK,CAChCkC,gBAAiBnC,YAAmBC,MAGvBiC,EAtBK,SAAC,GAAD,IACPD,EADO,EAClBU,UACAR,EAFkB,EAElBA,gBACAS,EAHkB,EAGlBA,WACGC,EAJe,mEAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXZ,GAAmBU,EAAWG,WAC5B,cAAC,IAAD,CAAUrB,GAAIiB,IAEd,cAACX,EAAD,eAAec,WCTjBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAWD,gBAAK,kBAAM,uDACtBE,EAAWF,gBAAK,kBAAM,iCACtBG,EAAQH,gBAAK,kBAAM,iCAEnBI,E,uKACJ,WACEC,KAAKR,MAAMS,qB,oBAGb,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,0FAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAa7B,OAAK,EAAC8B,KAAK,IAAIf,UAAWM,IACvC,cAAC,EAAD,CACES,KAAK,YACLf,UAAWQ,EACXP,WAAW,WAEb,cAAC,EAAD,CACEc,KAAK,YACLV,YAAU,EACVL,UAAWS,EACXR,WAAW,cAEb,cAAC,EAAD,CACEc,KAAK,SACLV,YAAU,EACVL,UAAWU,EACXT,WAAW,0B,GA3BPX,aAoCZG,EAAqB,CACzBoB,iBAAkBhE,KAGL0C,cAAQ,KAAME,EAAdF,CAAkCoB,G,6ECtC3CK,EAAQjD,YAAc,IAAD,mBACxBO,KAAuB,SAACN,EAAD,YAAMC,WADL,cAExBQ,KAAoB,SAACnB,EAAD,OAAUW,EAAV,EAAUA,QAAV,4BAA4BX,GAA5B,CAAmCW,OAF/B,cAGxBW,KAAuB,SAACtB,EAAD,OAAUW,EAAV,EAAUA,QAAV,mBACnBX,EAAM2D,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOlD,SAJnB,IAQrBgD,EAASlD,YAAc,GAAD,eACzBe,KAAe,SAACd,EAAD,YAAMC,YAGlBmD,EAAUrD,aAAc,GAAD,mBAC1BM,KAAuB,kBAAM,KADH,cAE1BC,KAAuB,kBAAM,KAFH,cAG1BC,KAAqB,kBAAM,KAHD,cAI1BC,KAAoB,kBAAM,KAJA,cAK1BC,KAAoB,kBAAM,KALA,cAM1BC,KAAkB,kBAAM,KANE,cAO1BC,KAAuB,kBAAM,KAPH,cAQ1BC,KAAuB,kBAAM,KARH,cAS1BC,KAAqB,kBAAM,KATD,IAYvBV,EAAQJ,YAAc,MAAD,mBACxBM,KAAuB,kBAAM,QADL,cAExBE,KAAqB,SAACP,EAAD,YAAMC,WAFH,cAGxBO,KAAoB,kBAAM,QAHF,IAMZJ,cAAgB,CAC7B4C,QACAC,SACAG,UACAjD,UChCIkD,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,GAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,GAAQC,YAAe,CAC3BC,QAAS,CACPrF,KAAMsF,YAAeP,GAAmBQ,KACxCC,SAAUC,GAEZpB,eAGIqB,GAAYC,YAAaR,I,SC7B/BS,IAASzC,OACP,cAAC,IAAM0C,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaf,QAAS,KAAMsB,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRI,SAASC,eAAe,W","file":"static/js/main.382e06d3.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = user => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post('/users/signup', user);\n\n    token.set(response.data.token);\n\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst logIn = user => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post('/users/login', user);\n\n    token.set(response.data.token);\n\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nexport { getIsAuthenticated, getUsername };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"AuthNav_navLink__1ETUO\",\"activeNavLink\":\"AuthNav_activeNavLink__1eyQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__2U8pw\",\"activeNavLink\":\"Navigation_activeNavLink__1M6Zj\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  logoutSuccess,\n  logoutError,\n  loginSuccess,\n  loginError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isLoggedIn = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isLoggedIn,\n  token,\n  error,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usermenuCont\":\"UserMenu_usermenuCont__1fk9A\",\"avatarImg\":\"UserMenu_avatarImg__heyLK\",\"userName\":\"UserMenu_userName__18tEX\",\"button\":\"UserMenu_button__3mTE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const deleteContact = createAction('phonebook/delete');\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { navLink, activeNavLink } from './AuthNav.module.css';\n\nclass AuthNav extends Component {\n  render() {\n    return (\n      <div>\n        <NavLink\n          to=\"/register\"\n          exact\n          className={navLink}\n          activeClassName={activeNavLink}\n        >\n          Register\n        </NavLink>\n        <NavLink\n          to=\"/login\"\n          exact\n          className={navLink}\n          activeClassName={activeNavLink}\n        >\n          Log in\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { navLink, activeNavLink } from './Navigation.module.css';\nimport { getIsAuthenticated } from '../../redux/auth';\n\nconst Navigation = ({ isAuthenticated }) => {\n  return (\n    <div>\n      <NavLink to=\"/\" exact className={navLink} activeClassName={activeNavLink}>\n        Home\n      </NavLink>\n      {isAuthenticated && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={navLink}\n          activeClassName={activeNavLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getUsername, logOut } from '../../redux/auth';\nimport { usermenuCont, userName, button } from './UserMenu.module.css';\n\nconst UserMenu = ({ name, logOut }) => {\n  return (\n    <div className={usermenuCont}>\n      <span className={userName}>{name}, welcome to The Phonebook! </span>\n      <button type=\"button\" onClick={logOut} className={button}>\n        Log out\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  name: getUsername(state),\n});\n\nconst mapDispatchToProps = {\n  logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AuthNav from '../AuthNav/AuthNav';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport { header } from './AppBar.module.css';\nimport { getIsAuthenticated } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => {\n  return (\n    <header className={header}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport AppBar from './components/AppBar/AppBar';\nimport { Switch } from 'react-router-dom';\nimport { getCurrentUser } from './redux/auth';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomePage = lazy(() => import('./views/Homepage/Homepage.js'));\nconst Contacts = lazy(() => import('./views/Contacts/Contacts.js'));\nconst Register = lazy(() => import('./views/Register/Register.js'));\nconst Login = lazy(() => import('./views/Login/Login.js'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomePage} />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              component={Register}\n              redirectTo=\"/contacts\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              component={Login}\n              redirectTo=\"/contacts\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => [\n    ...state.filter(contact => contact.id !== payload),\n  ],\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsRequest]: () => null,\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/auth-reducers';\n\nimport phoneBookReducer from './phonebook/contacts-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phoneBookReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}