{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","views/Contacts/Contacts.module.css","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/Filter/Filter.js","views/Contacts/Contacts.js"],"names":["module","exports","axios","defaults","baseURL","getLoading","state","contacts","loading","getFiltered","filter","getAllContactsItems","items","getErrorMessage","error","getIsContactList","length","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","initialState","number","ContactForm","useState","user","setUser","useSelector","dispatch","useDispatch","onHandleChange","e","target","value","prevState","className","styles","form","onSubmit","contact","preventDefault","find","a","addContactRequest","post","response","addContactSuccess","data","addContactError","message","input","placeholder","type","onChange","button","ContactItem","filtered","map","id","onClick","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","Filter","changeFilter","Contacts","isAnyContactList","isLoadingContacts","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","container","loader","contactsCont","contactsList"],"mappings":"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","file":"static/js/4.86ff358b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__3ZUAd\",\"button\":\"ContactItem_button__1siMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1V4Nm\",\"header\":\"Contacts_header__3TcUp\",\"loader\":\"Contacts_loader__20XU9\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch ({ message }) {\n    dispatch(fetchContactsError(message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFiltered = state => state.contacts.filter;\nconst getAllContactsItems = state => state.contacts.items;\nconst getErrorMessage = state => state.contacts.error;\nconst getIsContactList = state => state.contacts.items.length > 0;\n\nconst getVisibleContacts = createSelector(\n  [getAllContactsItems, getFiltered],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport {\n  getLoading,\n  getFiltered,\n  getAllContactsItems,\n  getErrorMessage,\n  getIsContactList,\n  getVisibleContacts,\n};\n","import React, { useState } from 'react';\nimport styles from './ContactForm.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllContactsItems, addContact } from '../../redux/phonebook';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm() {\n  const [user, setUser] = useState(initialState);\n  const contacts = useSelector(getAllContactsItems);\n  const dispatch = useDispatch();\n\n  const onHandleChange = e => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const found = contacts.find(contact => {\n      return contact.name === user.name || contact.number === user.number;\n    });\n    if (found) return;\n\n    // for (const contact in contacts) {\n    //   if (contact.name === user.name || contact.number === user.number) {\n    //     return;\n    //   }\n    // }\n\n    dispatch(addContact(user));\n    setUser(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onHandleSubmit}>\n      <label>\n        <input\n          className={styles.input}\n          placeholder=\"Name:\"\n          type=\"text\"\n          name=\"name\"\n          value={user.name}\n          onChange={onHandleChange}\n        ></input>\n      </label>\n      <label>\n        <input\n          className={styles.input}\n          placeholder=\"Number:\"\n          type=\"text\"\n          name=\"number\"\n          value={user.number}\n          onChange={onHandleChange}\n        ></input>\n      </label>\n      <button className={styles.button} type=\"submit\">\n        ADD\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport styles from './ContactItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact, getVisibleContacts } from '../../redux/phonebook';\n\nexport default function ContactItem() {\n  const filtered = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  return filtered.map(({ name, number, id }) => {\n    return (\n      <li className={styles.contact} name={name} key={id}>\n        <div className={styles.button}>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            X\n          </button>\n        </div>\n        {name} : {number}\n      </li>\n    );\n  });\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFiltered } from '../../redux/phonebook';\nimport { changeFilter } from '../../redux/phonebook/contacts-actions';\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFiltered);\n  return (\n    <>\n      <label>\n        <input\n          className={styles.input}\n          placeholder=\"Start entering...\"\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        ></input>\n      </label>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactsItem from '../../components/ContactItem/ContactItem';\nimport Filter from '../../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getLoading,\n  getErrorMessage,\n  fetchContacts,\n  getIsContactList,\n} from '../../redux/phonebook';\nimport {\n  container,\n  contactsCont,\n  contactsList,\n  loader,\n} from './Contacts.module.css';\n\nexport default function Contacts() {\n  const isAnyContactList = useSelector(getIsContactList);\n  const isLoadingContacts = useSelector(getLoading);\n  const error = useSelector(getErrorMessage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={container}>\n      <ContactForm />\n      {error && <p className=\"error-message\">{error}</p>}\n      {isLoadingContacts && (\n        <div>\n          <Loader className={loader} />\n        </div>\n      )}\n      {isAnyContactList && (\n        <div className={contactsCont}>\n          <Filter />\n          <ul className={contactsList}>\n            <ContactsItem />\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}